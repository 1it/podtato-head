name: branches

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'   # excludes master
      - '!main'
      - '!release-*'
  pull_request:
    branches:
      - '!master'
      - '!main'
      - '!release-*'

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_PODTATO_MAIN: podtato-head/podtato-main
  CONTAINER_LEFT_LEG: podtato-head/podtato-left-leg
  CONTAINER_RIGHT_LEG: podtato-head/podtato-right-leg
  CONTAINER_LEFT_ARM: podtato-head/podtato-left-arm
  CONTAINER_RIGHT_ARM: podtato-head/podtato-right-arm
  CONTAINER_HATS: podtato-head/podtato-hats
  TRIVY_IGNORE_UNFIXED: true
  TRIVY_VULN_TYPE: 'os,library'
  TRIVY_SEVERITY: 'CRITICAL,HIGH'
  
defaults:
  run:
    shell: bash
jobs:
  prepare_ci_run:
    name: Prepare CI Run
    # Prepare CI Run looks at what has been changed in this commit/PR/... and determines which artifacts should be
    # built afterwards (in other jobs that depend on this one).
    runs-on: ubuntu-20.04
    outputs: # declare what this job outputs (so it can be re-used for other jobs)
      # build config
      # metadata
      GIT_SHA: ${{ steps.extract_branch.outputs.GIT_SHA }}
      BRANCH: ${{ steps.extract_branch.outputs.BRANCH }}
      BRANCH_SLUG: ${{ steps.extract_branch.outputs.BRANCH_SLUG }}
      VERSION: ${{ steps.get_version.outputs.VERSION }}
      DATE: ${{ steps.get_datetime.outputs.DATE }}
      TIME: ${{ steps.get_datetime.outputs.TIME }}
      DATETIME: ${{ steps.get_datetime.outputs.DATETIME }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # need to checkout "all commits" for certain features to work (e.g., get all changed files)

      - name: Extract branch name
        id: extract_branch
        # see https://github.com/keptn/gh-action-extract-branch-name for details
        uses: keptn/gh-action-extract-branch-name@main

      - name: 'Get Previous tag'
        id: get_previous_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1.1"
        with:
          fallback: "0.0.1"

      - name: 'Get next patch version'
        id: get_next_semver_tag
        uses: "WyriHaximus/github-action-next-semvers@v1.1"
        with:
          version: ${{ steps.get_previous_tag.outputs.tag }}
      - name: Get the version
        id: get_version
        env:
          BRANCH: ${{ steps.extract_branch.outputs.BRANCH }}
          BRANCH_SLUG: ${{ steps.extract_branch.outputs.BRANCH_SLUG }}
        shell: bash
        run: |
          # determine version
          GIT_LAST_TAG=${{ steps.get_previous_tag.outputs.tag }}
          GIT_NEXT_TAG=${{ steps.get_next_semver_tag.outputs.patch }}
          echo "GIT_LAST_TAG=${GIT_LAST_TAG}, GIT_NEXT_TAG=${GIT_NEXT_TAG}"

          if [[ "$BRANCH" == "release-"* ]]; then
            # Release Branch: extract version from branch name
            VERSION=${BRANCH#"release-"}
            else
            if [[ "$BRANCH" == "master" ]]; then
              # master branch = latest-dev
              VERSION="${GIT_NEXT_TAG}-dev"
            else
              # Feature/Development Branch - use last tag with branch slug
              VERSION="${GIT_NEXT_TAG}-dev-${BRANCH_SLUG}"
            fi
          fi

          echo "VERSION=${VERSION}"

          echo "##[set-output name=VERSION;]$(echo ${VERSION})"
      - name: Get current date and time
        id: get_datetime
        run: |
          echo "::set-output name=DATE::$(date +'%Y%m%d')"
          echo "::set-output name=TIME::$(date +'%H%M')"
          echo "::set-output name=DATETIME::$(date +'%Y%m%d')$(date +'%H%M')"


  ############################################################################
  # Build Container Images                                                   #
  ############################################################################
  container_build_podtato-main:
    needs: [prepare_ci_run]
    name: Container Build podtato-main
    runs-on: ubuntu-20.04
    env:
      BRANCH: ${{ needs.prepare_ci_run.outputs.BRANCH }}
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATE }}${{ needs.prepare_ci_run.outputs.TIME }}
      GIT_SHA: ${{ needs.prepare_ci_run.outputs.GIT_SHA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          working-directory: podtato-services/podtato-main
          args: --issues-exit-code=0

      - name: Build
        id: docker_build_podtato-main
        uses: docker/build-push-action@v2
        with:
          context: podtato-services/podtato-main/.
          file: podtato-services/podtato-main/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_PODTATO_MAIN }}:latest-dev
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_PODTATO_MAIN }}:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_PODTATO_MAIN }}:${{ env.VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: '${{ env.TRIVY_IGNORE_UNFIXED }}'
          vuln-type: '${{ env.TRIVY_VULN_TYPE }}'
          severity: '${{ env.TRIVY_SEVERITY }}'
          
  container_build_right-leg:
    needs: [prepare_ci_run]
    name: Container Build right-leg
    runs-on: ubuntu-20.04
    env:
      BRANCH: ${{ needs.prepare_ci_run.outputs.BRANCH }}
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATE }}${{ needs.prepare_ci_run.outputs.TIME }}
      GIT_SHA: ${{ needs.prepare_ci_run.outputs.GIT_SHA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          working-directory: podtato-services/right-leg
          args: --issues-exit-code=0

      - name: Build
        id: docker_build_right-leg
        uses: docker/build-push-action@v2
        with:
          context: podtato-services/right-leg/.
          file: podtato-services/right-leg/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_RIGHT_LEG }}:latest-dev
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_RIGHT_LEG }}:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_RIGHT_LEG }}:${{ env.VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: '${{ env.TRIVY_IGNORE_UNFIXED }}'
          vuln-type: '${{ env.TRIVY_VULN_TYPE }}'
          severity: '${{ env.TRIVY_SEVERITY }}'
          
  container_build_left-leg:
    needs: [prepare_ci_run]
    name: Container Build left-leg
    runs-on: ubuntu-20.04
    env:
      BRANCH: ${{ needs.prepare_ci_run.outputs.BRANCH }}
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATE }}${{ needs.prepare_ci_run.outputs.TIME }}
      GIT_SHA: ${{ needs.prepare_ci_run.outputs.GIT_SHA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          working-directory: podtato-services/left-leg
          args: --issues-exit-code=0

      - name: Build
        id: docker_build_left-leg
        uses: docker/build-push-action@v2
        with:
          context: podtato-services/left-leg/.
          file: podtato-services/left-leg/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_LEFT_LEG }}:latest-dev
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_LEFT_LEG }}:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_LEFT_LEG }}:${{ env.VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: '${{ env.TRIVY_IGNORE_UNFIXED }}'
          vuln-type: '${{ env.TRIVY_VULN_TYPE }}'
          severity: '${{ env.TRIVY_SEVERITY }}'

  container_build_right-arm:
    needs: [prepare_ci_run]
    name: Container Build right-arm
    runs-on: ubuntu-20.04
    env:
      BRANCH: ${{ needs.prepare_ci_run.outputs.BRANCH }}
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATE }}${{ needs.prepare_ci_run.outputs.TIME }}
      GIT_SHA: ${{ needs.prepare_ci_run.outputs.GIT_SHA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          working-directory: podtato-services/right-arm
          args: --issues-exit-code=0

      - name: Build
        id: docker_build_right-arm
        uses: docker/build-push-action@v2
        with:
          context: podtato-services/right-arm/.
          file: podtato-services/right-arm/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_RIGHT_ARM }}:latest-dev
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_RIGHT_ARM }}:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_RIGHT_ARM }}:${{ env.VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: '${{ env.TRIVY_IGNORE_UNFIXED }}'
          vuln-type: '${{ env.TRIVY_VULN_TYPE }}'
          severity: '${{ env.TRIVY_SEVERITY }}'
          
  container_build_left-arm:
    needs: [prepare_ci_run]
    name: Container Build left-arm
    runs-on: ubuntu-20.04
    env:
      BRANCH: ${{ needs.prepare_ci_run.outputs.BRANCH }}
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATE }}${{ needs.prepare_ci_run.outputs.TIME }}
      GIT_SHA: ${{ needs.prepare_ci_run.outputs.GIT_SHA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          working-directory: podtato-services/left-arm
          args: --issues-exit-code=0

      - name: Build
        id: docker_build_left-arm
        uses: docker/build-push-action@v2
        with:
          context: podtato-services/left-arm/.
          file: podtato-services/left-arm/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_LEFT_ARM }}:latest-dev
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_LEFT_ARM }}:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_LEFT_ARM }}:${{ env.VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: '${{ env.TRIVY_IGNORE_UNFIXED }}'
          vuln-type: '${{ env.TRIVY_VULN_TYPE }}'
          severity: '${{ env.TRIVY_SEVERITY }}'

  container_build_hats:
    needs: [prepare_ci_run]
    name: Container Build hats
    runs-on: ubuntu-20.04
    env:
      BRANCH: ${{ needs.prepare_ci_run.outputs.BRANCH }}
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATE }}${{ needs.prepare_ci_run.outputs.TIME }}
      GIT_SHA: ${{ needs.prepare_ci_run.outputs.GIT_SHA }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
          working-directory: podtato-services/hats
          args: --issues-exit-code=0

      - name: Build
        id: docker_build_hats
        uses: docker/build-push-action@v2
        with:
          context: podtato-services/hats/.
          file: podtato-services/left-arm/docker/Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_HATS }}:latest-dev
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_HATS }}:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_HATS }}:${{ env.VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: '${{ env.TRIVY_IGNORE_UNFIXED }}'
          vuln-type: '${{ env.TRIVY_VULN_TYPE }}'
          severity: '${{ env.TRIVY_SEVERITY }}'